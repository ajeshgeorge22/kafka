[2016-07-19 14:56:02,207] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,237] INFO Property broker.id is overridden to 0 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,237] INFO Property log.cleaner.enable is overridden to false (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,237] INFO Property log.dirs is overridden to /tmp/kafka-logs (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,237] INFO Property log.retention.check.interval.ms is overridden to 300000 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,237] INFO Property log.retention.hours is overridden to 168 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,237] INFO Property log.segment.bytes is overridden to 1073741824 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,238] INFO Property num.io.threads is overridden to 8 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,238] INFO Property num.network.threads is overridden to 3 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,238] INFO Property num.partitions is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,238] INFO Property num.recovery.threads.per.data.dir is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,238] INFO Property port is overridden to 9092 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,238] INFO Property socket.receive.buffer.bytes is overridden to 102400 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,238] INFO Property socket.request.max.bytes is overridden to 104857600 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,238] INFO Property socket.send.buffer.bytes is overridden to 102400 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,239] INFO Property zookeeper.connect is overridden to localhost:2181 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,239] INFO Property zookeeper.connection.timeout.ms is overridden to 6000 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:02,275] INFO [Kafka Server 0], starting (kafka.server.KafkaServer)
[2016-07-19 14:56:02,277] INFO [Kafka Server 0], Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2016-07-19 14:56:02,884] FATAL [Kafka Server 0], Fatal error during KafkaServer startup. Prepare to shutdown (kafka.server.KafkaServer)
kafka.common.KafkaException: Failed to acquire lock on file .lock in /tmp/kafka-logs. A Kafka instance in another process or thread is using this directory.
	at kafka.log.LogManager$$anonfun$lockLogDirs$1.apply(LogManager.scala:98)
	at kafka.log.LogManager$$anonfun$lockLogDirs$1.apply(LogManager.scala:95)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:33)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:194)
	at scala.collection.mutable.WrappedArray.map(WrappedArray.scala:33)
	at kafka.log.LogManager.lockLogDirs(LogManager.scala:95)
	at kafka.log.LogManager.<init>(LogManager.scala:57)
	at kafka.server.KafkaServer.createLogManager(KafkaServer.scala:335)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:85)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2016-07-19 14:56:02,890] INFO [Kafka Server 0], shutting down (kafka.server.KafkaServer)
[2016-07-19 14:56:02,905] INFO [Kafka Server 0], shut down completed (kafka.server.KafkaServer)
[2016-07-19 14:56:02,906] FATAL Fatal error during KafkaServerStartable startup. Prepare to shutdown (kafka.server.KafkaServerStartable)
kafka.common.KafkaException: Failed to acquire lock on file .lock in /tmp/kafka-logs. A Kafka instance in another process or thread is using this directory.
	at kafka.log.LogManager$$anonfun$lockLogDirs$1.apply(LogManager.scala:98)
	at kafka.log.LogManager$$anonfun$lockLogDirs$1.apply(LogManager.scala:95)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:33)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:194)
	at scala.collection.mutable.WrappedArray.map(WrappedArray.scala:33)
	at kafka.log.LogManager.lockLogDirs(LogManager.scala:95)
	at kafka.log.LogManager.<init>(LogManager.scala:57)
	at kafka.server.KafkaServer.createLogManager(KafkaServer.scala:335)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:85)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2016-07-19 14:56:02,917] INFO [Kafka Server 0], shutting down (kafka.server.KafkaServer)
[2016-07-19 14:56:10,324] INFO Verifying properties (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,355] INFO Property broker.id is overridden to 2 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,355] INFO Property log.cleaner.enable is overridden to false (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,355] INFO Property log.dirs is overridden to /tmp/kafka-logs (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,355] INFO Property log.retention.check.interval.ms is overridden to 300000 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,355] INFO Property log.retention.hours is overridden to 168 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,356] INFO Property log.segment.bytes is overridden to 1073741824 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,356] INFO Property num.io.threads is overridden to 8 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,356] INFO Property num.network.threads is overridden to 3 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,356] INFO Property num.partitions is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,357] INFO Property num.recovery.threads.per.data.dir is overridden to 1 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,357] INFO Property port is overridden to 9093 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,357] INFO Property socket.receive.buffer.bytes is overridden to 102400 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,357] INFO Property socket.request.max.bytes is overridden to 104857600 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,357] INFO Property socket.send.buffer.bytes is overridden to 102400 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,357] INFO Property zookeeper.connect is overridden to localhost:2181 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,357] INFO Property zookeeper.connection.timeout.ms is overridden to 6000 (kafka.utils.VerifiableProperties)
[2016-07-19 14:56:10,390] INFO [Kafka Server 2], starting (kafka.server.KafkaServer)
[2016-07-19 14:56:10,391] INFO [Kafka Server 2], Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2016-07-19 14:56:10,686] FATAL [Kafka Server 2], Fatal error during KafkaServer startup. Prepare to shutdown (kafka.server.KafkaServer)
kafka.common.KafkaException: Failed to acquire lock on file .lock in /tmp/kafka-logs. A Kafka instance in another process or thread is using this directory.
	at kafka.log.LogManager$$anonfun$lockLogDirs$1.apply(LogManager.scala:98)
	at kafka.log.LogManager$$anonfun$lockLogDirs$1.apply(LogManager.scala:95)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:33)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:194)
	at scala.collection.mutable.WrappedArray.map(WrappedArray.scala:33)
	at kafka.log.LogManager.lockLogDirs(LogManager.scala:95)
	at kafka.log.LogManager.<init>(LogManager.scala:57)
	at kafka.server.KafkaServer.createLogManager(KafkaServer.scala:335)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:85)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2016-07-19 14:56:10,688] INFO [Kafka Server 2], shutting down (kafka.server.KafkaServer)
[2016-07-19 14:56:10,699] INFO [Kafka Server 2], shut down completed (kafka.server.KafkaServer)
[2016-07-19 14:56:10,700] FATAL Fatal error during KafkaServerStartable startup. Prepare to shutdown (kafka.server.KafkaServerStartable)
kafka.common.KafkaException: Failed to acquire lock on file .lock in /tmp/kafka-logs. A Kafka instance in another process or thread is using this directory.
	at kafka.log.LogManager$$anonfun$lockLogDirs$1.apply(LogManager.scala:98)
	at kafka.log.LogManager$$anonfun$lockLogDirs$1.apply(LogManager.scala:95)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)
	at scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:33)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:194)
	at scala.collection.mutable.WrappedArray.map(WrappedArray.scala:33)
	at kafka.log.LogManager.lockLogDirs(LogManager.scala:95)
	at kafka.log.LogManager.<init>(LogManager.scala:57)
	at kafka.server.KafkaServer.createLogManager(KafkaServer.scala:335)
	at kafka.server.KafkaServer.startup(KafkaServer.scala:85)
	at kafka.server.KafkaServerStartable.startup(KafkaServerStartable.scala:29)
	at kafka.Kafka$.main(Kafka.scala:46)
	at kafka.Kafka.main(Kafka.scala)
[2016-07-19 14:56:10,713] INFO [Kafka Server 2], shutting down (kafka.server.KafkaServer)
